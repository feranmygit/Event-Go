@model WebApp.Models.Eventstable
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Details";
}

<div class="details-page">
    <div class="details-card">
        <div class="image-container">
            <img src="@(Model.ImageName)" alt="Event Image" class="event-image" onclick="openModal(this)" />
        </div>
        <div class="details-content">
            <h2 class="event-title">@Model.EventName</h2>
            <p class="event-description">@Model.Description</p>

            <div class="info-group">
                <div class="info-item">
                    <label>Start Date:</label>
                    <span>@Model.StartDate.ToString("MMMM dd, yyyy")</span>
                </div>
                <div class="info-item">
                    <label>End Date:</label>
                    <span>@Model.EndDate.ToString("MMMM dd, yyyy")</span>
                </div>
                <div class="info-item">
                    <label>Venue:</label>
                    <span>@Model.Venue</span>
                </div>
                <div class="info-item">
                    <label>Status:</label>
                    <span class="status-bar @Model.Status.ToLower()">@Model.Status</span>
                </div>
                <div class="info-item">
                    <label>Category:</label>
                    <span>@Model.Category.Category</span>
                </div>
                <div class="info-item">
                    <label>Booked By:</label>
                    <span>@Model.BookingUserName</span>
                </div>
            </div>
        </div>
        <div class="actions">
                   @if (SignInManager.IsSignedIn(User))
                                    {
                                        var currentUser = await UserManager.GetUserAsync(User);
                                        var currentEmail = currentUser.Email;

                if (Model.CreatedBy == currentEmail || await UserManager.IsInRoleAsync(currentUser, "Admin"))
                                        {
            <a asp-action="Edit" asp-route-id="@Model?.EventId" class="btn-mode edit-btn">Edit</a>
                                        }
                                    }
            @if (SignInManager.IsSignedIn(User))
            {
                var currentUser = await UserManager.GetUserAsync(User);
                var currentEmail = currentUser.Email;

                if (Model.CreatedBy != currentEmail)
                {
                    <form asp-action="RequestTicket" method="post" style="display: inline;">
                        <input type="hidden" name="eventId" value="@Model.EventId" />
                        <button type="submit" class="action-link edit">Get Ticket</button>
                    </form>
                    <form asp-action="BookEvent" method="post" style="display: inline;">
                        <input type="hidden" name="eventId" value="@Model.EventId" />
                        <button type="submit" class="action-link delete">
                            <span class="material-symbols-outlined">
                                favorite
                            </span>
                        </button>
                    </form>
                }
            }
            <a asp-action="Index" class="btn-mode bk-btn">Back to List</a>
        </div>
    </div>
</div>

<!-- Modal for Image Zoom -->
<div id="imageModal" class="modal" onclick="closeModal()">
    <span class="close">&times;</span>
    <img class="modal-content" id="modalImg">
</div>


<script>
    document.addEventListener("DOMContentLoaded", () => {
        const modal = document.getElementById("imageModal");
        const modalImg = document.getElementById("modalImg");
    @*         const caption = document.getElementById("caption");
            *@
            // Ensure the modal is hidden on page load
            modal.style.display = "none";

        // Open modal only on image click
        document.querySelectorAll(".event-image").forEach((img) => {
            img.addEventListener("click", () => {
                modal.style.display = "flex"; // Show modal
                modalImg.src = img.src; // Set modal image
    @*                 caption.innerHTML = img.alt; // Set caption
                    *@            });
        });

        // Close modal on close button click
        document.querySelector(".close").addEventListener("click", () => {
            modal.style.display = "none";
        });

        // Close modal on background click
        modal.addEventListener("click", (e) => {
            if (e.target === modal) {
                modal.style.display = "none";
            }
        });
    });
</script>