@model IEnumerable<Event_Go.Models.TicketRequest>

@{
    ViewData["Title"] = "TicketRequests";
}

<partial name="_Spinner" />


<div class="Event-blog Static-Heading-title">
    <h1 class="Event-title Event-title-margin general-font">Pending Ticket Requests</h1>
</div>

@if (Model != null && Model.Any()){

    <div class="roles-table-wrapper role-table-gen">
        <table class="roles-table">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Event Name</th>
                    <th>User Email</th>
                    <th>Status</th>
                    <th>Requested Date</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="table-body">
                @foreach (var request in Model)
                {
                    <tr>
                        <td></td>
                        <td><strong>@request.Event.EventName</strong></td>
                        <td>@request.UserName</td>
                        <td>@request.Status</td>
                        <td>@request.RequestDate.ToString("MMMM dd, yyyy")</td>
                        <td>
                            <form asp-action="ProcessTicketRequest" method="post" id="eventForm" style="display: inline;">
                                <input type="hidden" name="requestId" value="@request.TicketId" />
                                <button type="submit" name="action" value="accept" class="action-link edit">Accept</button>
                                <button type="submit" name="action" value="reject" class="action-link delete" onclick="return confirm('Are you sure About your action?');">Reject</button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="Center">
        <img src="~/image-animate/undraw_no-data_ig65.svg" style="height:200px;" />
        <p>No pending ticket request.</p>
    </div>

}



<script>
    document.addEventListener("DOMContentLoaded", () => {
        const form = document.getElementById("eventForm");
        const spinner = document.getElementById("spinner-overlay");

        // Handle form submission
        form.addEventListener("submit", (event) => {
            // Check form validity
            if (!form.checkValidity()) {
                event.preventDefault(); // Prevent form submission
                form.classList.add("was-validated");
                spinner.style.display = "none";
            } else {
                // Show spinner if valid
                spinner.style.display = "flex";
            }
        });

    });

    // Function to add serial numbers to the "ID" column
    function addSerialNumbers() {
        const rows = document.querySelectorAll("#table-body tr");
        rows.forEach((row, index) => {
            row.cells[0].textContent = index + 1; // Add serial number in the first column (ID)
        });
    }

    // Call the function when the page is loaded
    window.onload = addSerialNumbers;
</script>

