@model IEnumerable<WebApp.Models.Eventstable>
@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Events";
}
<div class="all-padding">
    <div class="image-slider-container">
        <div class="image-slider">
            <img src="~/image-animate/3oqqafoi.png" alt="Image 1">
            <img src="~/image-animate/m6s17abs.png" alt="Image 2" />
            <img src="~/image-animate/se15fc7e.png" alt="Image 3" />
            <img src="~/image-animate/ptjbrueq.png" alt="Image 4" />
        </div>

        <!-- Navigation Buttons -->
        <button class="slider-nav prev" onclick="prevSlide()">&#10094;</button>
        <button class="slider-nav next" onclick="nextSlide()">&#10095;</button>

        <!-- Dots for Indicators -->
        <div class="dots-container">
            <span class="dot" onclick="goToSlide(0)"></span>
            <span class="dot" onclick="goToSlide(1)"></span>
            <span class="dot" onclick="goToSlide(2)"></span>
            <span class="dot" onclick="goToSlide(3)"></span>
        </div>
    </div>






    <div class="Event-blog">
        <h1 class="Event-title Event-title-margin">Explore Upcoming Events</h1>
    </div>

    @if (User.IsInRole("Admin") || (User.IsInRole("Organizer")))
    {
    <header class="card-Statistics">
    <h1 style="text-align: center; padding: 20px; color: #333;">Event Status Dashboard</h1>
</header>

<main>
    <div class="dashboard">
        <!-- Upcoming Events Card -->
        <div class="card-grid upcoming">
            <h2>@ViewBag.UpcomingCount</h2>
            <p>Upcoming Events</p>
        </div>

        <!-- Ongoing Events Card -->
        <div class="card-grid ongoing">
            <h2>@ViewBag.OngoingCount</h2>
            <p>Ongoing Events</p>
        </div>

        <!-- Planned Events Card -->
        <div class="card-grid planned">
            <h2>@ViewBag.PlannedCount</h2>
                <p>Completed Events</p>
        </div>

        <!-- Cancelled Events Card -->
        <div class="card-grid cancelled">
            <h2>@ViewBag.CancelledCount</h2>
            <p>Cancelled Events</p>
        </div>
    </div>
</main>
}

<div class="create-content">
    <div class="search-cont-box">
            <div class="top-section">
                <!-- Create Event Button -->
                @if (User.IsInRole("Admin") || (User.IsInRole("Organizer")))
                {
                    <a class="create-btn" asp-action="Create">+ Create New Event</a>
                }
                <!-- Search Form -->
                <form asp-action="Index" method="get" asp-controller="Eventstables" class="search-form">
                    <div class="search-options">
                        <label for="searchBy" class="search-label">Search By:</label>
                        <div class="radio-group">
                            <input type="radio" class="btn-check" name="searchBy" id="searchByEvent" value="EventName" checked>
                            <label class="radio-label" for="searchByEvent">Event Name</label>

                            <input type="radio" class="btn-check" name="searchBy" id="searchByUser" value="BookingUserName">
                            <label class="radio-label" for="searchByUser">User Booking Name</label>
                        </div>
                    </div>
                    <div class="search-box">
                        <input type="text" id="SearchValue" name="SearchValue" placeholder="Search events or users" class="search-input">
                    </div>
                    <button type="submit" class="search-btn">Search</button>
                </form>
            </div>
        </div>


<div class="Event-header">
    <h1>Events</h1>
</div>

        <!-- Search Results Count -->
        @if (!string.IsNullOrEmpty(ViewBag.SearchValue))
        {
            <div class="search-result-count searchCountBox">
                @if (ViewBag.SearchCount > 0)
                {
                    <strong>@ViewBag.SearchCount</strong>
                <p> event(s) found for "<strong>@ViewBag.SearchValue</strong>".</p>
               }
                else
                {
                <p>No items found for "<strong>@ViewBag.SearchValue</strong>". </p>
                }
           </div>
        }
        <div><h1>@ViewBag.message</h1></div>

    @if (Model != null && Model.Any()){
           
                <div class="row card-container">
                @foreach (var item in Model)
                {
                    <div class="card-contai">
                    <div class="col-md-4 mb-4">
                        <div class="card event-card">
                            <div class="card-image">
                                    <img src="@(item.ImageName)" alt="Event Image" class="img-fluid event-img" onclick="redirectToDetails(@item.EventId)">
                                <div class="status @item.Status.ToLower()">@item.Status</div>

                                        <!-- Event Booking Form Logic -->
@*                                         @if (SignInManager.IsSignedIn(User))
 *@                                    @{
                                        // var currentUser = await UserManager.GetUserAsync(User);
                                        // var currentEmail = currentUser.Email;
                                        var currentEmail = User.Identity.IsAuthenticated
                                        ? User.FindFirstValue(ClaimTypes.Email)
                                        : null;

                                        if (currentEmail == null || item.CreatedBy != currentEmail)
                                        {
                                            <div class="Event-Booking">
                                                <form asp-action="BookEvent" method="post">
                                                    <input type="hidden" name="eventId" value="@item.EventId" />
                                                    <span class="Booking-btn" onclick="this.closest('form').submit()">
                                                        <span class="material-symbols-outlined" style="vertical-align: middle;">
                                                            favorite
                                                        </span>
@*                                                         <span class="btn-text">Book</span>
 *@                                                    </span>
                                                </form>
                                            </div>
                                        }
@*                                         else
                                        {
                                            <div class="text-muted">You cannot book your own event.</div>
                                        } *@
                                    }

                                    @*       <form asp-action="BookEvent" method="post">
                                            <input type="hidden" name="eventId" value="@item.EventId" />
                                            <span class="Booking-btn" onclick="this.closest('form').submit()">
                                                <span class="material-symbols-outlined" style="vertical-align: middle;">
                                                    event
                                                </span>
                                                <span class="btn-text">Book</span>

                                            </span>
                                        </form> *@
@*                                     </div>
 *@                            </div>
                            <div class="card-body">
                                <div class="d-flex justify-content-between mb-2 venue-cont">
                                    <span class="category">@item.Category.Category</span>
                                    <div class="venue-label">
                                        <label class="card-text">Venue:</label>
                                        <span class="venue">@item.Venue</span>
                                    </div>
                                </div>

                                <h5 class="card-title event-name">@item.EventName</h5>

                                <p class="card-text event-description">@item.Description</p>

                                <p class="booking-username">Booked by: @item.BookingUserName</p>

                                    <div class="action-icons d-flex justify-content-around">
                                        <a asp-action="Details" asp-route-id="@item.EventId" class="action-icon" title="Details">
                                            <span class="material-symbols-outlined">info</span>
                                            <span class="preview">Details</span>
                                        </a>

                                        @if (SignInManager.IsSignedIn(User))
                                        {
                                            var currentUser = await UserManager.GetUserAsync(User);
@*                                             var currentEmail = currentUser.Email;
 *@
                                            if (item.CreatedBy == currentEmail || await UserManager.IsInRoleAsync(currentUser, "Admin"))
                                            {
                                                <a asp-action="Delete" asp-route-id="@item.EventId" class="action-icon" title="Delete">
                                                    <span class="material-symbols-outlined">delete</span>
                                                    <span class="preview">Delete</span>
                                                </a>
                                                <a asp-action="Edit" asp-route-id="@item.EventId" class="action-icon" title="Edit">
                                                    <span class="material-symbols-outlined">edit_square</span>
                                                    <span class="preview">Edit</span>
                                                </a>
                                            }
                                         @*    else
                                            {
                                                <span class="text-muted">You do not have permission to modify this event.</span>
                                            } 
                                            *@
                                        }
                                      
                                    </div>

                            </div>
                        </div>
                    </div>
                    <!-- Repeat the above card for other items -->
                </div>
                }

                </div>
         }

        else
        {
        <div>
                    <p class="Center">No events available.</p>
        </div>
        }


    <!-- Pagination Controls -->
    <div class="pagination-controls">
        <button class="pagination-btn"
        @(ViewBag.CurrentPage > 1 ? "" : "disabled")
                onclick="location.href='@Url.Action("Index", new { page = ViewBag.CurrentPage - 1 })'">
            Previous
        </button>

        <span class="page-info">
            Page @ViewBag.CurrentPage / @ViewBag.TotalPages
        </span>

        <button class="pagination-btn"
        @(ViewBag.CurrentPage < ViewBag.TotalPages ? "" : "disabled")
                onclick="location.href='@Url.Action("Index", new { page = ViewBag.CurrentPage + 1 })'">
            Next
        </button>
    </div>

</div>
</div>




@*     make corrections to it and let it be responsive across all screen devices from mobile 300px upward, it should be responsive
 *@


@* General Event Categories
Conferences

Business Conferences
Academic Symposia
Trade Shows


Workshops

Skill Development Workshops
Corporate Training
Educational Seminars


Social Gatherings

Weddings
Birthdays
Anniversaries


Sports Events

Tournaments
Marathons
Esports Competitions


Entertainment

Concerts
Comedy Shows
Theater Performances


Festivals

Music Festivals
Food and Drink Festivals
Cultural Festivals


Fundraisers

Charity Galas
Crowdfunding Events
Auctions


Corporate Events

Product Launches
Networking Events
Company Retreats


Educational

Lectures
Panel Discussions
Webinars


Virtual Events

Online Conferences
Virtual Networking
Remote Training Sessions
 *@