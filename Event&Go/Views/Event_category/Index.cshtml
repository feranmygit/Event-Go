@model IEnumerable<WebApp.Models.Event_category>

@{
    ViewData["Title"] = "Category Lists";
}

<h1>Category Lists</h1>

<p>
    <div class="container-fluid d-flex justify-content-between">
        <a class="btn btn-info" style="height:40px;" asp-action="Create">Create New</a>
        <nav class="navbar bg-body-tertiary">
            <div class="container-fluid">
                <form role="search" method="get" asp-action="Index" asp-controller="Event_category">
                    <text>Search By:</text>
                    <select class="form-control" name="searchBy">
                        <option value="Category">Category</option>
                        <option value="PricePerHour">Price</option>
                    </select>
                    <br />
                    <div class="d-flex">
                        <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search" name="SearchValue" />
                        <button class="btn btn-outline-success" type="submit">Search</button>
                    </div>
                </form>
            </div>
        </nav>
    </div>
</p>

<hr />

<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PricePerHour)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PricePerDay)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsActive)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MaxCapacity)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Any())
        {
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Category)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    $@Html.DisplayFor(modelItem => item.PricePerHour)
                </td>
                <td>
                    $@Html.DisplayFor(modelItem => item.PricePerDay)
                </td>
                <td>
                    @Html.DropDownListFor(modelItem => item.IsActive,
                             new SelectList(new[]
                             {
                new { Value = "true", Text = "True" },
                new { Value = "false", Text = "False" }
                }, "Value", "Text", item.IsActive.ToString().ToLower()),
                             new { @class = "form-control", onchange = "this.form.submit()" })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MaxCapacity)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
        }
        else
        {
            <tr>
                <td colspan="8">No events available.</td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination -->
@* <div class="pagination">
    <ul class="pagination">
        @for (var i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @((Model.PageNumber == i) ? "active" : "")">
                <a class="page-link" asp-action="Index" asp-route-searchTerm="@Model.SearchTerm" asp-route-pageNumber="@i">@i</a>
            </li>
        }
    </ul>
</div> *@
