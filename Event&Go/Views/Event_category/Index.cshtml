@model IEnumerable<WebApp.Models.Event_category>

@{
    ViewData["Title"] = "Category Lists";
}

<div class="Event-blog">
    <h1 class="Event-title category-Title">Category Lists</h1>
</div>

<div class="actions-container">
    <!-- Create Button -->
    <a asp-action="Create" class="btn-create-category">Add New Category</a>

    <!-- Search Container -->
    <div class="search-container-category">
        <form role="search" method="get" asp-action="Index" asp-controller="Event_category">
            <!-- Search Group -->
            <div class="search-group-category">
                <label for="searchBy">Search By:</label>
                <select id="searchBy" name="searchBy">
                    <option value="Category">Category</option>
                    <option value="PricePerHour">Price</option>
                </select>
            </div>

            <!-- Search Input Group -->
            <div class="search-input-group-category">
                <input type="search" placeholder="Search" aria-label="Search" name="SearchValue" />
                <button type="submit">Search</button>
            </div>
        </form>
    </div>
</div>



<div class="category-list">
    @if (Model != null && Model.Any())
    {
        @foreach (var item in Model)
        {
            <div class="category-card">
                <div class="card-header">
                    <h3>@item.Category</h3>
                    <p>@item.Description</p>
                </div>
                <div class="card-body">
                    <p><strong>Price Per Hour:</strong> $@item.PricePerHour</p>
                    <p><strong>Price Per Day:</strong> $@item.PricePerDay</p>
                    <p><strong>Max Capacity:</strong> @item.MaxCapacity</p>
                    <p>
                        <strong>Is Available:</strong>
                        @Html.DropDownListFor(modelItem => item.IsActive,
                                 new SelectList(new[]
                                 {
                new { Value = "true", Text = "True" },
                new { Value = "false", Text = "False" }
                }, "Value", "Text", item.IsActive.ToString().ToLower()),
                                 new { @class = "form-control status-dropdown", onchange = "this.form.submit()" })
                    </p>
                </div>
                <div class="card-footer">
                    <div class="action-icons d-flex justify-content-around">
                        <a asp-action="Edit" asp-route-id="@item.Id" class="action-icon" title="Edit">
                            <span class="material-symbols-outlined">edit_square</span>
                            <span class="preview">Edit</span>
                        </a>
                        <a asp-action="Details" asp-route-id="@item.Id" class="action-icon" title="Details">
                            <span class="material-symbols-outlined">info</span>
                            <span class="preview">Details</span>
                        </a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="action-icon" title="Delete">
                            <span class="material-symbols-outlined">delete</span>
                            <span class="preview">Delete</span>
                        </a>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="no-data">
            <p>No events available.</p>
        </div>
    }
</div>

<!-- Pagination -->
@* <div class="pagination">
    <ul class="pagination">
        @for (var i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @((Model.PageNumber == i) ? "active" : "")">
                <a class="page-link" asp-action="Index" asp-route-searchTerm="@Model.SearchTerm" asp-route-pageNumber="@i">@i</a>
            </li>
        }
    </ul>
</div> *@
